name: Create Release
on:
  release:
    types: [created]
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Modify samples version
        run: |
            RELEASE_VERSION=$(./gradlew properties -q | grep 'version:' | awk '{print $2}')
            [[ ! -z "${RELEASE_VERSION}" ]] || (echo "Get empty release version, RELEASE_VERSION='${RELEASE_VERSION}'" && exit 1)
            echo 'RELEASE_VERSION=${RELEASE_VERSION}' >> ${GITHUB_ENV}
            PLAY_PLUGIN_LINE="id 'org\.gradle\.playframework' version"
            find src/docs/samples -name 'build.gradle*' -type f -exec sed -i "s/${PLAY_PLUGIN_LINE} '\(.*\)'/${PLAY_PLUGIN_LINE} '${RELEASE_VERSIOn}'/g" {} +
            git status
      - name: Checkout master
        run: git checkout master
      - name: Commit changes
        uses: EndBug/add-and-commit@v5
        with:
          author_name: bot-gradle
          author_email: bot-gradle@gradle.com
          message: "Update sample version ${{ env.RELEASE_VERSION }}"
          add: src/docs/samples
          signoff: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish plugin
        uses: eskatos/gradle-command-action@v1.2.0
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        with:
          arguments: publishPlugins -Pgradle.publish.key=${GRADLE_PUBLISH_KEY} -Pgradle.publish.secret=${GRADLE_PUBLISH_SECRET}
      - name: Publish Javadocs
        uses: eskatos/gradle-command-action@v1.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: gitPublishPush -Dorg.ajoberstar.grgit.auth.username=${GITHUB_TOKEN}

